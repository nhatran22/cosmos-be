AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: App Cloudformation

Resources:
  LogGroupCosmosApiGateway:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/Cosmos

  CosmosApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub CosmosApiGateway
      StageName: dev
      OpenApiVersion: 3.0.0
      Cors:
        AllowMethods: "'GET, POST, PUT, DELETE, OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./swagger.yaml
        Auth:
          AddDefaultAuthorizerToCorsPreflight: true
          AccessLogSetting:
            DestinationArn: !GetAtt LogGroupCosmosApiGateway.Arn
            Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength", "user-agent":"$context.identity.userAgent"}'

  DynamoDB:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./dynamodb.yaml

  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: nodejs.zip
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Delete
      CompatibleArchitectures:
        - x86_64

  CosmosRole:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./role.yaml

  CosmosFunctions:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./function.yaml
      Parameters:
        LambdaLayerArn: !Ref LambdaLayer
        GetSiteConfigRoleArn: !GetAtt CosmosRole.Outputs.GetSiteConfigRoleArn

  CosmosPermissions:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./permission.yaml
      Parameters:
        CosmosApiGateway: !Ref CosmosApiGateway
        GetSiteConfigFunctionArn: !GetAtt CosmosFunctions.Outputs.GetSiteConfigFunctionArn

Outputs:
  CosmosApiGatewayUrl:
    Value: !Sub ${CosmosApiGateway}.execute-api.${AWS::Region}.amazonaws.com/
